<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alipay.dao.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.alipay.dao.po.UserPO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="tenant_id" jdbcType="BIGINT" property="tenantId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , gmt_create, gmt_modified, username, user_id, status, tenant_id, role_name,last_login_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from user
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insertSelective" parameterType="com.alipay.dao.po.UserPO" useGeneratedKeys="true"
            keyProperty="id">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="tenantId != null">
                tenant_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="tenantId != null">
                #{tenantId,jdbcType=BIGINT},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.alipay.dao.po.UserPO">
        update user
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId,jdbcType=BIGINT},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="findOne" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM user WHERE user_id = #{userId,jdbcType=VARCHAR}
    </select>

    <sql id="getListLimit">
        <if test="offset != null and size != null">
            LIMIT
            #{offset},
            #{size}
        </if>
    </sql>
    <select id="findCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM user
        <include refid="getListWhere"></include>
    </select>
    <select id="findList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM user
        <include refid="getListWhere"></include>
        ORDER BY id DESC
        <include refid="com.alipay.dao.mapper.RuleMapper.getListLimit"></include>
    </select>
    <select id="find" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM user
        WHERE user_id = #{userId} AND password = #{password}
    </select>
    <select id="findByUserName" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM user
        WHERE username = #{userName}
    </select>

    <sql id="getListWhere">
        <where>
            <if test="username != null and username != ''">
                username LIKE CONCAT('%',#{username},'%')
            </if>
            <if test="userId != null and userId != ''">
                AND user_id LIKE CONCAT('%',#{userId},'%')
            </if>
        </where>
    </sql>

</mapper>